{"version":3,"file":"static/js/429.524287c4.chunk.js","mappings":"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","sources":["pages/auth/reset.js","shared/layouts/auth.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport AuthLayout from \"./../../shared/layouts/auth\";\nimport axios from \"../../service/axios\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router\";\n\nconst ResetPage = () => {\n    const [email, setEmail] = useState('');\n    const [inputSet, setInput] = useState('');\n    const [storeResponse, setStoreResponse] = useState(0);\n    const [storeBotResponse, setStoreBotResponse] = useState(1);\n    const [resArr, setResArr] = useState([]);\n    const [storeChatHistory, setStoreChatHistory] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [showDialog, setShowDialog] = useState(false);\n    const [selectOption, setSelectOption] = useState(true);\n    const [modalStatus, setModalStatus] = useState(true);\n    const [flagReveal, setFlagReveal] = useState(false);\n    const navigate = useNavigate();\n\n    const chatSequence = [\n        {\n            id: \"bot-0\",\n            message: \"Oops you forgot your password, would you like to change your password?\"\n        },\n        {\n            id: \"bot-1\",\n            message: \"Kindly provide your email address\"\n        },\n        {\n            id: \"bot-2\",\n            message: \"Kindly provide your First Name\"\n        },\n        {\n            id: \"bot-3\",\n            message: \"Kindly provide your Last Name\"\n        },\n        {\n            id: \"bot-4\",\n            message: \"Congratulation the information provided are valid. Enter a new password\"\n        },\n        {\n            id: \"bot-5\",\n            message: \"Re-enter the Password\"\n        }\n    ];\n\n    const getUserInfo = async (e) => {\n        try {\n            e.preventDefault();\n            if (storeResponse === 2 || storeResponse === 4) {\n                try {\n                    const output = await axios.put(\n                        `/auth/reset/password`,\n                        storeResponse === 2 ? {\n                            customerName: resArr[1] + \" \" + inputSet,\n                            customerEmail: resArr[0],\n                            final: 0\n                        } : {\n                            customerName: resArr[1] + \" \" + resArr[2],\n                            customerEmail: resArr[0],\n                            new_password: resArr[3],\n                            confirm_password: inputSet,\n                            final: 1\n                        },\n                        {\n                            headers: { 'Content-Type': 'application/json' },\n                            withCredentials: true,\n                            credentials: 'include'\n                        })\n                    const response = output.data;\n                    toast.success(response.message, {\n                        position: toast.POSITION.TOP_CENTER,\n                    });\n                    if (storeResponse === 4) {\n                        setModalStatus(true)\n                        setFlagReveal(true)\n                    }\n\n                    if (storeResponse < 4) {\n                        setStoreBotResponse(storeBotResponse + 1)\n                        setStoreChatHistory([...storeChatHistory, [chatSequence[storeBotResponse].message, inputSet]])\n                        setStoreResponse(storeResponse + 1)\n                        setResArr([...resArr, inputSet])\n                    }\n                } catch (err) {\n                    if (!err?.response) {\n                        const errormessage = 'An error occurred';\n                        toast.error(errormessage, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        });\n                    } else if (err.response?.status === 400 || err.response?.status === 401) {\n                        const errormessage = err.response.data.output;\n                        toast.error(errormessage, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        });\n                    } else if (err.response?.status === 403) {\n                        const failedMessage = err.response.data.output;\n                        failedMessage.map((i) =>\n                            toast.error(i.msg, {\n                                position: toast.POSITION.TOP_RIGHT,\n                            })\n                        );\n                    } else {\n                        const errormessage = 'Failed Action';\n                        toast.error(errormessage, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        });\n                    }\n                }\n            } else {\n                if (storeResponse === 3) {\n                    const regularExpression = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\n                    if (inputSet.match(regularExpression)) {\n                        setResArr([...resArr, inputSet])\n\n                        setStoreBotResponse(storeBotResponse + 1)\n                        setStoreChatHistory([...storeChatHistory, [chatSequence[storeBotResponse].message, inputSet]])\n                        setStoreResponse(storeResponse + 1)\n                    } else {\n                        const errormessage = 'Password should be combination of one uppercase , one lower case, one special char, one digit and min 8 , max 20 char long';\n                        toast.error(errormessage, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        });\n                    }\n                } else {\n                    setResArr([...resArr, inputSet])\n\n                    setStoreBotResponse(storeBotResponse + 1)\n                    setStoreChatHistory([...storeChatHistory, [chatSequence[storeBotResponse].message, inputSet]])\n                    setStoreResponse(storeResponse + 1)\n                }\n            }\n            setInput(\"\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const handleChange = (e) => {\n        setInput(e.target.value);\n    }\n    const handleReset = async (e) => {\n        e.preventDefault();\n        setLoading(true)\n\n        try {\n            const output = await axios.put(\n                `/auth/forgot-password`,\n                { email },\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    withCredentials: true,\n                    credentials: 'include'\n                })\n            const response = output.data;\n            toast.success(response.message, {\n                position: toast.POSITION.TOP_CENTER,\n            });\n        } catch (err) {\n            if (!err?.response) {\n                const errormessage = 'An error occurred';\n                toast.error(errormessage, {\n                    position: toast.POSITION.TOP_RIGHT,\n                });\n            } else if (err.response?.status === 400 || err.response?.status === 401) {\n                const errormessage = err.response.data.output;\n                toast.error(errormessage, {\n                    position: toast.POSITION.TOP_RIGHT,\n                });\n            } else if (err.response?.status === 403) {\n                const failedMessage = err.response.data.output;\n                failedMessage.map((i) =>\n                    toast.error(i.msg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                );\n            } else {\n                const errormessage = 'Failed Action';\n                toast.error(errormessage, {\n                    position: toast.POSITION.TOP_RIGHT,\n                });\n            }\n        }\n        setLoading(false)\n        e.target.reset();\n    };\n\n    const showDialogAction = (e) => {\n        setShowDialog(showDialog ? false : true);\n    }\n\n    const closeModal = (e) => {\n        setModalStatus(false)\n    }\n\n    const optionCheck = (value) => {\n        if (selectOption) {\n            if (value === 1) {\n                setStoreBotResponse(storeBotResponse + 1)\n                setStoreChatHistory([...storeChatHistory, [chatSequence[storeBotResponse].message, \"Yes\"]])\n            } else {\n                navigate(\"/\");\n            }\n        } else {\n            const errormessage = 'You have already selected an option';\n            toast.error(errormessage, {\n                position: toast.POSITION.TOP_RIGHT,\n            });\n        }\n        setSelectOption(undefined)\n    }\n\n    return (\n        <div>\n            <div class=\"modal inmodal\" id=\"myModal2\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" style={{ display: modalStatus ? \"block\" : \"none\" }}>\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content animated flipInY\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={closeModal}><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                            <h4 class=\"modal-title\">{flagReveal ? \"Claim your Price!\" : \"Reset your password!\"}</h4>\n                            <small class=\"font-bold\">IMPORTANT INFORMATION.</small>\n                        </div>\n                        <div class=\"modal-body\">\n                            <p><strong>{flagReveal ? \"Congratulations, your flag is CTF4BF{9455w0rd_r3537}\" : \"Reset your password using either the form or the chat bot at the bottom right corner\"}</strong></p>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-white\" data-dismiss=\"modal\" onClick={closeModal}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <AuthLayout\n                headerDescription=\"Continue with your account today by reseting your password. All you have to do is enter your email address.\"\n                headerText=\"Reset your passcode today!\"\n            >\n                <form className=\"m-t\" onSubmit={handleReset}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Enter your Email Address\"\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div className=\"\" role=\"status\">\n                        <button type=\"submit\" disabled={email === \"\" ? true : false} className={\"block full-width m-b btn\" + (loading ? \" btn-default\" : \" btn-primary\")}>\n                            {loading ? <div className=\"sk-spinner sk-spinner-fading-circle\">\n                                <div className=\"sk-circle1 sk-circle\"></div>\n                                <div className=\"sk-circle2 sk-circle\"></div>\n                                <div className=\"sk-circle3 sk-circle\"></div>\n                                <div className=\"sk-circle4 sk-circle\"></div>\n                                <div className=\"sk-circle5 sk-circle\"></div>\n                                <div className=\"sk-circle6 sk-circle\"></div>\n                                <div className=\"sk-circle7 sk-circle\"></div>\n                                <div className=\"sk-circle8 sk-circle\"></div>\n                                <div className=\"sk-circle9 sk-circle\"></div>\n                                <div className=\"sk-circle10 sk-circle\"></div>\n                                <div className=\"sk-circle11 sk-circle\"></div>\n                                <div className=\"sk-circle12 sk-circle\"></div>\n                            </div>\n                                : \"Reset Password\"}\n                        </button>\n                    </div>\n\n                    <small>\n                        Have an Account? <a href=\"/\"> Login</a>\n                    </small>\n                </form>\n            </AuthLayout>\n\n            <div className={\"small-chat-box fadeInRight animated\" + (!showDialog ? \"\" : \" active\")} style={{ width: \"530px\", height: \"630px\" }}>\n\n                <div className=\"heading\" draggable=\"true\">\n                    <small className=\"chat-date float-right\">\n                        Online <span style={{\n                            backgroundColor: \"#90ee90\", borderRadius: \"50%\", height: \"6px\", width: \"6px\", display: \"inline-block\"\n                        }}></span>\n                    </small>\n                    Welcom to Brighter Futures\n                </div>\n                <div className=\"slimScrollDiv\" style={{ position: \"relative\", overflow: \"scroll\", width: \"auto\", height: \"544px\" }}>\n                    <div className=\"content\" style={{ overflow: \"scroll\", width: \"auto\", height: \"544px\" }}>\n                        <div className=\"left\">\n                            <div className=\"author-name\">\n                                Help Bot <small className=\"chat-date\">\n                                    03/2023\n                                </small>\n                            </div>\n                            <div className=\"chat-message active\">\n                                {chatSequence[0].message}\n                            </div>\n                        </div>\n                        <div className=\"rows\">\n                            <div className=\"d-flex col-12\" style={{ marginLeft: \"3%\" }}>\n                                <div className=\"col-3 text-center mt-3 pt-2 ml-5\" style={{ backgroundColor: \"grey\", color: \"white\", borderRadius: \"10%\", cursor: \"pointer\" }} onClick={() => optionCheck(1)}>\n                                    Yes\n                                </div>\n                                <div className=\"col-3 text-center mt-3 ml-3 pt-2\" style={{ backgroundColor: \"grey\", color: \"white\", borderRadius: \"10%\", cursor: \"pointer\" }} onClick={() => optionCheck(0)}>\n                                    No\n                                </div>\n                            </div>\n                        </div>\n                        {storeChatHistory.map(history => (\n                            <><div className=\"right\">\n                                <div className=\"author-name\">\n                                    {resArr.length === 2 ? resArr[1] : resArr.length >= 3 ? resArr[1] + \" \" + resArr[2] : \"User\"}\n                                    <small className=\"chat-date\">\n                                        03/2023\n                                    </small>\n                                </div>\n                                <div className=\"chat-message\">\n                                    {history[1]}\n                                </div>\n                            </div>\n\n                                <div className=\"left\">\n                                    <div className=\"author-name\">\n                                        Help Bot <small className=\"chat-date\">\n                                            03/2023\n                                        </small>\n                                    </div>\n                                    <div className=\"chat-message active\">\n                                        {history[0]}\n                                    </div>\n                                </div></>\n                        ))}\n\n\n                    </div>\n                </div>\n                {storeChatHistory.length > 0 ?\n                    <div className=\"form-chat\">\n                        <div className=\"input-group input-group-sm\">\n                            <input type=\"text\" className=\"form-control\"\n                                onChange={handleChange}\n                                value={inputSet}\n                            />\n                            <span className=\"input-group-btn\"> <button\n                                className=\"btn btn-primary\" onClick={getUserInfo} type=\"button\">Send\n                            </button> </span></div>\n                    </div>\n                    : \"\"}\n\n            </div>\n            <div id=\"small-chat\">\n\n                <span className=\"badge badge-warning float-right\">Need Help?</span>\n                <span className=\"open-small-chat\" onClick={showDialogAction} style={{ cursor: \"pointer\" }}>\n                    {!showDialog ?\n                        <i className=\"fa fa-comments\"></i>\n                        :\n\n                        <i className=\"fa fa-times\"></i>\n                    }\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default ResetPage;\n","import React, { useEffect } from \"react\";\nimport Logo from './../../assets/site_logo.png';\n\nconst AuthLayout = props => {\n    const { children, headerDescription, headerText } = props;\n    useEffect(() => {\n        // document.body.style.backgroundColor = \"#f3f3f4\";\n        document.body.classList.add('gray-bg');\n    }, [])\n    return (\n        <div className=\"middle-box text-center loginscreen animated fadeInDown\">\n            <div>\n                <div>\n                    <h1 className=\"logo-name\"><img width={350} height={220} src={Logo} alt=\"BFMFB\" /></h1>\n                </div>\n                <h3>Welcome to Brighter Futures Microfinance Bank</h3>\n                <p>\n                    {headerDescription}\n                </p>\n                <p>{headerText}</p>\n                {children}\n                <p className=\"m-t\">\n                    <small>\n                        All rights reserved &copy; 2023\n                    </small>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthLayout;\n"],"names":["_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","inputSet","setInput","_useState5","_useState6","storeResponse","setStoreResponse","_useState7","_useState8","storeBotResponse","setStoreBotResponse","_useState9","_useState10","resArr","setResArr","_useState11","_useState12","storeChatHistory","setStoreChatHistory","_useState13","_useState14","loading","setLoading","_useState15","_useState16","showDialog","setShowDialog","_useState17","_useState18","selectOption","setSelectOption","_useState19","_useState20","modalStatus","setModalStatus","_useState21","_useState22","flagReveal","setFlagReveal","navigate","useNavigate","chatSequence","id","message","getUserInfo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","output","response","_err$response","_err$response2","_err$response3","_errormessage","regularExpression","wrap","_context","prev","next","preventDefault","axios","customerName","customerEmail","final","new_password","confirm_password","headers","withCredentials","credentials","sent","data","toast","position","concat","_toConsumableArray","t0","status","errormessage","map","i","msg","match","t1","console","log","stop","_x","apply","arguments","handleReset","_ref2","_callee2","_err$response4","_err$response5","_err$response6","_errormessage4","_context2","target","reset","_x2","closeModal","optionCheck","value","undefined","_jsxs","children","_jsx","class","tabindex","role","style","display","type","onClick","AuthLayout","headerDescription","headerText","className","onSubmit","placeholder","onChange","required","disabled","href","width","height","draggable","backgroundColor","borderRadius","overflow","marginLeft","color","cursor","history","_Fragment","length","props","useEffect","document","body","classList","add","src","Logo","alt"],"sourceRoot":""}