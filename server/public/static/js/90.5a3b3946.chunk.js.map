{"version":3,"file":"static/js/90.5a3b3946.chunk.js","mappings":"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","sources":["../node_modules/broadcast-channel/dist/esbrowser/util.js","../node_modules/broadcast-channel/dist/esbrowser/methods/native.js","../node_modules/oblivious-set/src/index.ts","../node_modules/broadcast-channel/dist/esbrowser/options.js","../node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js","../node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js","../node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js","../node_modules/broadcast-channel/dist/esbrowser/method-chooser.js","../node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js","../node_modules/unload/dist/es/index.js","../node_modules/unload/dist/es/node.js","../node_modules/unload/dist/es/browser.js","../node_modules/broadcast-channel/dist/esbrowser/leader-election.js"],"sourcesContent":["/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}","import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","\n/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nexport class ObliviousSet<T = any> {\n    public readonly map = new Map();\n\n    /**\n     * Creating calls to setTimeout() is expensive,\n     * so we only do that if there is not timeout already open.\n     */\n    public _to: boolean = false;\n    constructor(\n        public readonly ttl: number\n    ) { }\n\n    has(value: T): boolean {\n        return this.map.has(value);\n    }\n\n    add(value: T): void {\n        this.map.set(value, now());\n\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(() => {\n                this._to = false;\n                removeTooOldValues(this);\n            }, 0);\n        }\n    }\n\n    clear() {\n        this.map.clear();\n    }\n}\n\n\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(\n    obliviousSet: ObliviousSet\n) {\n    const olderThen = now() - obliviousSet.ttl;\n    const iterator = obliviousSet.map[Symbol.iterator]();\n\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n\n        const next = iterator.next().value;\n\n        if (!next) {\n            return; // no more elements\n        }\n        const value = next[0];\n        const time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        } else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\n\nexport function now(): number {\n    return new Date().getTime();\n}\n\n\n","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return 5;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}","import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happened 'after' the listener\n         * was added, we also listen to events that happened 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","import { addBrowser } from './browser.js';\nimport { addNode } from './node.js';\n\n/**\n * Use the code directly to prevent import problems\n * with the detect-node package.\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar USE_METHOD = isNode ? addNode : addBrowser;\nvar LISTENERS = new Set();\nvar startedListening = false;\nfunction startListening() {\n  if (startedListening) {\n    return;\n  }\n  startedListening = true;\n  USE_METHOD(runAll);\n}\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') {\n    throw new Error('Listener is no function');\n  }\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","export function addNode(fn) {\n  process.on('exit', function () {\n    return fn();\n  });\n\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n  process.on('beforeExit', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches ctrl+c event\n  process.on('SIGINT', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches uncaught exceptions\n  process.on('uncaughtException', function (err) {\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(101);\n    });\n  });\n}","/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}","import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE } from './util.js';\nimport { add as unloadAdd } from 'unload';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this.hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this.hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this.hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2.hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return _sendMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return _sendMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return _sendMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n\n/**\n * sends and internal message over the broadcast-channel\n */\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector.hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return _sendMessage(leaderElector, 'tell');\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}"],"names":["Promise","resolve","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_VOID","sleep","time","resolveWith","res","setTimeout","randomToken","Math","random","toString","substring","lastMs","additional","microSeconds","ms","Date","getTime","NativeMethod","create","channelName","state","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msg","data","close","channelState","onMessage","fn","postMessage","messageJson","err","reject","canBeUsed","window","_pubkey","Error","type","averageResponseTime","micro","ObliviousSet","ttl","map","Map","_to","prototype","has","value","this","add","_this","set","now","obliviousSet","olderThen","iterator","Symbol","next","delete","removeTooOldValues","clear","fillOptionsWithDefaults","originalOptions","arguments","length","undefined","options","JSON","parse","stringify","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","methods","node","maxParallelWrites","useFastPath","DB_PREFIX","OBJECT_STORE_ID","TRANSACTION_SETTINGS","durability","getIdb","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","commitIndexedDBTransaction","tx","commit","getMessagesHigherThan","db","lastCursorId","transaction","objectStore","ret","keyRangeValue","IDBKeyRange","bound","Infinity","getAll","getAllRequest","rej","onerror","onsuccess","e","target","result","openCursorRequest","openCursor","ev","cursor","id","push","cleanOldMessages","msgObk","getOldMessages","then","tooOld","ids","closed","all","deleteRequest","removeMessagesById","_readLoop","readNewMessages","newerMessages","useMessages","filter","msgObj","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","forEach","IndexedDBMethod","IndexedDB","dbName","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","createDatabase","writeBlockPromise","readQueuePromises","readerUuid","writeObject","oncomplete","writeMessage","min","max","floor","KEY_PREFIX","getLocalStorage","localStorage","storageKey","ls","key","setItem","removeItem","LocalstorageMethod","listener","newValue","addEventListener","addStorageEventListener","token","removeEventListener","writeObj","document","createEvent","initEvent","dispatchEvent","userAgent","navigator","toLowerCase","includes","defaultTime","SIMULATE_CHANNELS","Set","SimulateMethod","name","Array","from","channel","METHODS","ENFORCED_OPTIONS","OPEN_BROADCAST_CHANNELS","lastId","method","chooseMethods","concat","Boolean","find","m","useMethod","chooseMethod","_iL","_onML","_addEL","message","internal","_uMP","_befC","_prepP","maybePromise","obj","s","_state","_prepareChannel","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","hundredMsInMicro","minMessageTime","_startListening","_removeListenerObject","o","_stopListening","postInternal","listenObj","awaitPrepare","isClosed","USE_METHOD","Object","call","process","on","exit","console","trace","WorkerGlobalScope","self","oldClose","bind","LISTENERS","startedListening","runAll","remove","run","promises","LeaderElection","_options","isLeader","hasLeader","isDead","_aplQ","_aplQC","_unl","_lstns","_dpL","_dpLC","hasLeaderListener","context","action","_sendMessage","leaderElector","msgJson","applyOnce","isFromFallbackInterval","_this2","applyRun","stopCriteriaPromiseResolve","stopCriteria","stopCriteriaPromise","handleMessage","waitForAnswerTime","responseTime","race","unloadFn","unloadAdd","die","isLeaderListener","beLeader","awaitLeadership","_aLP","resolved","finish","whenDeathListener","tryOnFallBack","_awaitLeadershipOnce","onduplicate","_this3","uFn"],"sourceRoot":""}